// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../generated/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Relation avec les amis
  friends Friend[] @relation("UserFriends")

  // Relation avec les demandes d'amis
  friend Friend[] @relation("FriendUser")
}

model Friend {
  id        Int      @id @default(autoincrement())
  userId    Int
  friendId  Int
  status    String   @default("pending") // pending | accepted | rejected
  createdAt DateTime @default(now())

  // Relation avec l'utilisateur
  user User @relation("UserFriends", fields: [userId], references: [id])

  // Relation avec l'ami
  friend User @relation("FriendUser", fields: [friendId], references: [id])

  @@unique([userId, friendId]) // Evite les doublons
}
