services:
  postgres:
    image: postgres:15
    restart: always
    container_name: database-dailychallenge
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: dailychallenge
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  ms-users:
    build:
      context: .
      dockerfile: backend/ms-users/Dockerfile
    depends_on:
      - postgres
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://admin:secret@postgres:5432/dailychallenge?schema=public
      - PORT=3001
      - JWT_SECRET=test_env_docker_or_not
      - JWT_EXPIRES_IN=7d
      - HOST=0.0.0.0
    volumes:
      - /app/node_modules

  ms-friends:
    build:
      context: .
      dockerfile: backend/ms-friends/Dockerfile
    depends_on:
      - postgres
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://admin:secret@postgres:5432/dailychallenge?schema=public
      - PORT=3002
      - HOST=0.0.0.0
    volumes:
      - /app/node_modules

  ms-game-cinema-1:
    build:
      context: .
      dockerfile: backend/ms-game-cinema-1/Dockerfile
    depends_on:
      - postgres
      - ms-users
    ports:
      - "3002:3002"
    environment:
      - IS_DOCKER=true
      - DATABASE_URL=postgresql://admin:secret@postgres:5432/dailychallenge?schema=public
      - PORT=3004
      - HOST=0.0.0.0
    volumes:
      - /app/node_modules

  ms-gateway:
    build:
      context: .
      dockerfile: backend/ms-gateway/Dockerfile
    depends_on:
      - ms-users
      - ms-friends
    ports:
      - "3000:3000"
    environment:
      - IS_DOCKER=true
      - PORT=3000
      - JWT_SECRET=test_env_docker_or_not
      - JWT_EXPIRES_IN=7d
    volumes:
      - /app/node_modules

volumes:
  pgdata:
